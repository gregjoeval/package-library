{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.18.15",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@gjv/redux-slice-factory!",
  "docComment": "",
  "name": "@gjv/redux-slice-factory",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@gjv/redux-slice-factory!",
      "name": "",
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@gjv/redux-slice-factory!createEntitySlice:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function createEntitySlice<TGlobalState, TEntity, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ">(options: "
            },
            {
              "kind": "Reference",
              "text": "ICreateEntitySliceOptions",
              "canonicalReference": "@gjv/redux-slice-factory!ICreateEntitySliceOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TEntity, TStatusEnum, TError>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IEntitySlice",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySlice:type"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TEntity, TStatusEnum, TError>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TEntity",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "name": "createEntitySlice"
        },
        {
          "kind": "Function",
          "canonicalReference": "@gjv/redux-slice-factory!createModelSlice:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function createModelSlice<TGlobalState, TModel, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ">(options: "
            },
            {
              "kind": "Reference",
              "text": "ICreateModelSliceOptions",
              "canonicalReference": "@gjv/redux-slice-factory!ICreateModelSliceOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TModel, TStatusEnum, TError>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IModelSlice",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSlice:type"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TModel, TStatusEnum, TError>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              }
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TModel",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              }
            }
          ],
          "name": "createModelSlice"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!ICreateEntitySliceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICreateEntitySliceOptions<TGlobalState, TEntity, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISliceOptions",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IEntityState",
              "canonicalReference": "@gjv/redux-slice-factory!IEntityState:interface"
            },
            {
              "kind": "Content",
              "text": "<TEntity, TStatusEnum, TError>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TEntity",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ICreateEntitySliceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ICreateEntitySliceOptions#selectId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectId: "
                },
                {
                  "kind": "Content",
                  "text": "(o: TEntity) => "
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ICreateEntitySliceOptions#sortComparer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortComparer: "
                },
                {
                  "kind": "Content",
                  "text": "false | "
                },
                {
                  "kind": "Reference",
                  "text": "Comparer",
                  "canonicalReference": "@reduxjs/toolkit!Comparer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sortComparer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!ICreateModelSliceOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ICreateModelSliceOptions<TGlobalState, TModel, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISliceOptions",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IModelState",
              "canonicalReference": "@gjv/redux-slice-factory!IModelState:interface"
            },
            {
              "kind": "Content",
              "text": "<TModel, TStatusEnum, TError>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TModel",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ICreateModelSliceOptions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ICreateModelSliceOptions#handleUpdate:member",
              "docComment": "/**\n * This is how the slice will merge the current model and the update model during an update action\n *\n * @defaultValue\n *\n * `merge` from {@link https://www.npmjs.com/package/ts-deepmerge}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleUpdate?: "
                },
                {
                  "kind": "Content",
                  "text": "(current: "
                },
                {
                  "kind": "Reference",
                  "text": "Draft",
                  "canonicalReference": "immer!Draft:type"
                },
                {
                  "kind": "Content",
                  "text": "<TModel>, update: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TModel>) => TModel"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "handleUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gjv/redux-slice-factory!IEntitySlice:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IEntitySlice<TGlobalState, TEntity, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "ISlice",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IEntityState",
              "canonicalReference": "@gjv/redux-slice-factory!IEntityState:interface"
            },
            {
              "kind": "Content",
              "text": "<TEntity, TStatusEnum, TError>, "
            },
            {
              "kind": "Reference",
              "text": "IEntitySliceReducers",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IEntityState",
              "canonicalReference": "@gjv/redux-slice-factory!IEntityState:interface"
            },
            {
              "kind": "Content",
              "text": "<TEntity, TStatusEnum, TError>, TEntity, TStatusEnum, TError>, "
            },
            {
              "kind": "Reference",
              "text": "IEntitySliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TEntity, TStatusEnum, TError>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IEntitySlice",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TEntity",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 17
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEntitySliceReducers<TSliceState, TEntity, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "IMetaSliceReducers",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceReducers:interface"
            },
            {
              "kind": "Content",
              "text": "<TSliceState, TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSliceState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TEntity",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IEntitySliceReducers",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#addMany:member",
              "docComment": "/**\n * This will modify the slice. This adds many entities to the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addMany: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ", TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addMany",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#addOne:member",
              "docComment": "/**\n * This will modify the slice. This adds one entity to the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addOne: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addOne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#hydrateAll:member",
              "docComment": "/**\n * This will hydrate the slice. This sets all entities of the slice and lastHydrated, and resets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.setAll}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hydrateAll: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ", TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hydrateAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#hydrateMany:member",
              "docComment": "/**\n * This will hydrate the slice. This sets many entities of the slice and lastHydrated, and resets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.setMany}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hydrateMany: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ", TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hydrateMany",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#hydrateOne:member",
              "docComment": "/**\n * This will hydrate the slice. This sets one entity of the slice and lastHydrated, and resets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.setOne}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hydrateOne: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hydrateOne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#removeAll:member",
              "docComment": "/**\n * This will modify the slice. This removes all entities of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.removeAll}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeAll: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removeAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#removeMany:member",
              "docComment": "/**\n * This will modify the slice. This removes many entities of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.removeMany}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeMany: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ">>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removeMany",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#removeOne:member",
              "docComment": "/**\n * This will modify the slice. This removes one entity of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.removeOne}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeOne: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "removeOne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#reset:member",
              "docComment": "/**\n * This will reset the slice to its initial state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reset: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#setAll:member",
              "docComment": "/**\n * This will modify the slice. This sets all entities of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.setAll}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setAll: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ", TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setAll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#updateMany:member",
              "docComment": "/**\n * This will modify the slice. This updates many entities of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.updateMany}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMany: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Update",
                  "canonicalReference": "@reduxjs/toolkit!Update:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updateMany",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#updateOne:member",
              "docComment": "/**\n * This will modify the slice. This updates one entity of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.updateOne}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateOne: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Update",
                  "canonicalReference": "@reduxjs/toolkit!Update:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "updateOne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#upsertMany:member",
              "docComment": "/**\n * This will modify the slice. This updates or inserts many entities of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.upsertMany}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsertMany: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity> | "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EntityId",
                  "canonicalReference": "@reduxjs/toolkit!EntityId:type"
                },
                {
                  "kind": "Content",
                  "text": ", TEntity>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertMany",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceReducers#upsertOne:member",
              "docComment": "/**\n * This will modify the slice. This updates or inserts one entity of the slice and sets lastModified.\n *\n * @see\n *\n * {@link @reduxjs/toolkit#EntityStateAdapter.upsertOne}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "upsertOne: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TEntity>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "upsertOne",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IEntitySliceSelectors:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEntitySliceSelectors<TGlobalState, TEntity, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "EntitySelectors",
              "canonicalReference": "@reduxjs/toolkit!EntitySelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TEntity, TGlobalState>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ISliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IEntityState",
              "canonicalReference": "@gjv/redux-slice-factory!IEntityState:interface"
            },
            {
              "kind": "Content",
              "text": "<TEntity, TStatusEnum, TError>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IMetaSliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TEntity",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IEntitySliceSelectors",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IEntityState:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEntityState<T, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ReduxEntityState",
              "canonicalReference": "@reduxjs/toolkit!EntityState:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IMetaState",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState:interface"
            },
            {
              "kind": "Content",
              "text": "<TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IEntityState",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors:interface",
          "docComment": "/**\n * @see\n *\n * IMetaState\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IMetaSliceSelectors<TGlobalState, TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IMetaSliceSelectors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors#selectError:member",
              "docComment": "/**\n * This selects the error of the slice.\n *\n * @see\n *\n * {@link IMetaState.error}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectError: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => TError | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors#selectLastHydrated:member",
              "docComment": "/**\n * This selects the status of the slice.\n *\n * @see\n *\n * {@link IMetaState.lastHydrated}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectLastHydrated: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectLastHydrated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors#selectLastModified:member",
              "docComment": "/**\n * This selects the lastModified of the slice.\n *\n * @see\n *\n * {@link IMetaState.lastModified}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectLastModified: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectLastModified",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors#selectStatus:member",
              "docComment": "/**\n * This selects the status of the slice.\n *\n * @see\n *\n * {@link IMetaState.status}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectStatus: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => TStatusEnum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectStatus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IMetaState:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IMetaState<TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IMetaState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState#error:member",
              "docComment": "/**\n * The status of the slice.\n *\n * @defaultValue\n *\n * `SerializedError`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error: "
                },
                {
                  "kind": "Content",
                  "text": "TError | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState#lastHydrated:member",
              "docComment": "/**\n * The timestamp of the last time the slice was hydrated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastHydrated: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastHydrated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState#lastModified:member",
              "docComment": "/**\n * The timestamp of the last time the slice was modified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastModified: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lastModified",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState#status:member",
              "docComment": "/**\n * The status of the slice.\n *\n * @defaultValue\n *\n * `StatusEnum`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "TStatusEnum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@gjv/redux-slice-factory!IModelSlice:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IModelSlice<TGlobalState, TModel, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "ISlice",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IModelState",
              "canonicalReference": "@gjv/redux-slice-factory!IModelState:interface"
            },
            {
              "kind": "Content",
              "text": "<TModel, TStatusEnum, TError>, "
            },
            {
              "kind": "Reference",
              "text": "IModelSliceReducers",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IModelState",
              "canonicalReference": "@gjv/redux-slice-factory!IModelState:interface"
            },
            {
              "kind": "Content",
              "text": "<TModel, TStatusEnum, TError>, TModel, TStatusEnum, TError>, "
            },
            {
              "kind": "Reference",
              "text": "IModelSliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TModel, TStatusEnum, TError>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IModelSlice",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TModel",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 17
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IModelSliceReducers<TSliceState, TModel, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "IMetaSliceReducers",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceReducers:interface"
            },
            {
              "kind": "Content",
              "text": "<TSliceState, TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TSliceState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TModel",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IModelSliceReducers",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers#hydrate:member",
              "docComment": "/**\n * This will hydrate the slice. This sets the model and lastHydrated, and resets lastModified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hydrate: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TModel>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hydrate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers#reset:member",
              "docComment": "/**\n * This will reset the slice to its initial state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reset: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers#set:member",
              "docComment": "/**\n * This will modify the slice. This sets the model and sets lastModified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<TModel>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "set",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceReducers#update:member",
              "docComment": "/**\n * This will modify the slice. This updates the model and sets lastModified.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducer",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState, "
                },
                {
                  "kind": "Reference",
                  "text": "PayloadAction",
                  "canonicalReference": "@reduxjs/toolkit!PayloadAction:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<TModel>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "update",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IModelSliceSelectors:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IModelSliceSelectors<TGlobalState, TModel, TStatusEnum extends "
            },
            {
              "kind": "Content",
              "text": "keyof typeof "
            },
            {
              "kind": "Reference",
              "text": "StatusEnum",
              "canonicalReference": "@gjv/redux-slice-factory!~StatusEnum:enum"
            },
            {
              "kind": "Content",
              "text": " | string"
            },
            {
              "kind": "Content",
              "text": ", TError extends "
            },
            {
              "kind": "Reference",
              "text": "SerializedError",
              "canonicalReference": "@reduxjs/toolkit!SerializedError:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ISliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, "
            },
            {
              "kind": "Reference",
              "text": "IModelState",
              "canonicalReference": "@gjv/redux-slice-factory!IModelState:interface"
            },
            {
              "kind": "Content",
              "text": "<TModel, TStatusEnum, TError>>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "IMetaSliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaSliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TModel",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IModelSliceSelectors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelSliceSelectors#selectModel:member",
              "docComment": "/**\n * This selects the slice model.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectModel: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => TModel"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectModel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            },
            {
              "startIndex": 12,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!IModelState:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IModelState<T, TStatusEnum, TError> extends "
            },
            {
              "kind": "Reference",
              "text": "IMetaState",
              "canonicalReference": "@gjv/redux-slice-factory!IMetaState:interface"
            },
            {
              "kind": "Content",
              "text": "<TStatusEnum, TError> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TStatusEnum",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TError",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IModelState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!IModelState#model:member",
              "docComment": "/**\n * The model of the slice.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "model: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "model",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!ISlice:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISlice<TGlobalState, TSliceState, TCaseReducers extends "
            },
            {
              "kind": "Reference",
              "text": "SliceCaseReducers",
              "canonicalReference": "@reduxjs/toolkit!SliceCaseReducers:type"
            },
            {
              "kind": "Content",
              "text": "<TSliceState>"
            },
            {
              "kind": "Content",
              "text": ", TSliceSelectors extends "
            },
            {
              "kind": "Reference",
              "text": "ISliceSelectors",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors:interface"
            },
            {
              "kind": "Content",
              "text": "<TGlobalState, TSliceState>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TSliceState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TCaseReducers",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TSliceSelectors",
              "constraintTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ISlice",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice#actions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions: "
                },
                {
                  "kind": "Reference",
                  "text": "CaseReducerActions",
                  "canonicalReference": "@reduxjs/toolkit!CaseReducerActions:type"
                },
                {
                  "kind": "Content",
                  "text": "<TCaseReducers>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "ISliceName",
                  "canonicalReference": "@gjv/redux-slice-factory!ISliceName:type"
                },
                {
                  "kind": "Content",
                  "text": "<TGlobalState>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice#reducer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reducer: "
                },
                {
                  "kind": "Reference",
                  "text": "Reducer",
                  "canonicalReference": "redux!Reducer:type"
                },
                {
                  "kind": "Content",
                  "text": "<TSliceState>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reducer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISlice#selectors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectors: "
                },
                {
                  "kind": "Content",
                  "text": "TSliceSelectors"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISliceSelectors<TGlobalState, TSliceState> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TGlobalState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TSliceState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ISliceSelectors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors#selectCanRequest:member",
              "docComment": "/**\n * @defaultValue\n *\n * (overrideable) The slice can request if it is not requesting, error is empty, and the slice has not been modified\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectCanRequest: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectCanRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors#selectShouldRequest:member",
              "docComment": "/**\n * @defaultValue\n *\n * (overrideable) The slice should request if it can request and it has not been hydrated\n *\n * @see\n *\n * {@link ISliceSelectors.selectCanRequest}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectShouldRequest: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectShouldRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@gjv/redux-slice-factory!ISliceSelectors#selectSliceState:member",
              "docComment": "/**\n * Selects the entire slice state.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectSliceState: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TGlobalState) => TSliceState"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectSliceState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@gjv/redux-slice-factory!StatusEnum:enum",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare enum StatusEnum "
            }
          ],
          "releaseTag": "Public",
          "name": "StatusEnum",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@gjv/redux-slice-factory!StatusEnum.Failed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Failed = "
                },
                {
                  "kind": "Content",
                  "text": "\"Failed\""
                }
              ],
              "releaseTag": "Public",
              "name": "Failed",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@gjv/redux-slice-factory!StatusEnum.Requesting:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Requesting = "
                },
                {
                  "kind": "Content",
                  "text": "\"Requesting\""
                }
              ],
              "releaseTag": "Public",
              "name": "Requesting",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@gjv/redux-slice-factory!StatusEnum.Settled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Settled = "
                },
                {
                  "kind": "Content",
                  "text": "\"Settled\""
                }
              ],
              "releaseTag": "Public",
              "name": "Settled",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
